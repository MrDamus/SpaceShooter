class Bullet{constructor({x:e,y:t,radiusX:s=2,radiusY:a=6,offset:r=-20,speed:n=10,owner:i,damage:l=1,color:o}){this.x=e,this.y=t+r,this.radiusX=s,this.radiusY=a,this.owner=i,this.damage=l,this.color=o,this.interval=setInterval(()=>{this.y-=n},50)}draw(){ctx.save(),ctx.beginPath(),ctx.ellipse(this.x,this.y+20,this.radiusX,this.radiusY,0,2*Math.PI,0),ctx.stroke(),ctx.fillStyle=this.color||"yellow",ctx.fill(),ctx.closePath(),ctx.restore()}}const FONT_NAME="kong",startingHP=10;let player,enemiesInterval,nextStageScore=100,spawnEnemyInterval=3600,spawnEnemyBulletInterval=2e3,gameInProgress=!0,score=0;const boom=new Image;boom.src="assets/img/boom.png";const arrowsKeyCodes=[38,40,39,37],wsadKeyCodes=[87,83,68,65],scoreWrapper=document.getElementById("score");scoreWrapper.innerHTML="Score: "+score;const canvas=document.getElementById("canvas"),ctx=canvas.getContext("2d");canvas.style.backgroundColor="black",width=360,height=400,speed=2.4,friction=.94,radius=10;let x=width/2,y=height/2,velY=0,velX=0,keys=[];bullets=[],enemies=[],gunDamage=1,enemyDamage=1;const BULLETS={DEFAULT_ENEMY:{radiusX:3,radiusY:3,offset:20,speed:-8,damage:1,color:"blue"},GREEN_ENEMY:{radiusX:2,radiusY:4,offset:20,speed:-8,damage:1,color:"green"},ORANGE_ENEMY:{radiusX:1,radiusY:6,offset:20,speed:-8,damage:2,color:"orange"},RED_ENEMY:{radiusX:7,radiusY:2,offset:20,speed:-8,damage:3,color:"red"},DEFAULT_PLAYER:{radiusX:1,radiusY:4,offset:-20,speed:8,damage:1,color:"yellow"}},ENEMIES={DEFAULT_ENEMY:{x:x,y:y,hp:1,points:10,radius:10,velX:.9,velY:1,avatarSrc:"assets/img/blueE.png",bullet:BULLETS.DEFAULT_ENEMY},GREEN_ENEMY:{x:x,y:y,hp:2,points:20,radius:10,velX:.4,velY:2,avatarSrc:"assets/img/greenE.png",bullet:BULLETS.GREEN_ENEMY},ORANGE_ENEMY:{x:x,y:y,hp:3,points:30,radius:10,velX:.6,velY:3,avatarSrc:"assets/img/orangeE.png",bullet:BULLETS.ORANGE_ENEMY},RED_ENEMY:{x:x,y:y,hp:4,points:40,radius:10,velX:1,velY:.6,avatarSrc:"assets/img/redE.png",bullet:BULLETS.RED_ENEMY}};class Enemy{constructor({x:e,y:t,hp:s,radius:a,avatarSrc:r,points:n=5,bullet:i=BULLETS.DEFAULT_ENEMY,velX:l,velY:o,isDestroyed:d}){this.x=e,this.y=t,this.hp=s,this.points=n,this.bullet=i,this.radius=a,this.interval=setInterval(()=>{this.spawnNewBullet()},spawnEnemyBulletInterval-score),this.avatar=new Image,this.avatar.src=r,this.avatarWidth=20,this.avatarHeight=20,this.isDestroyed=d,this.velX=getRandomArbitrary(-l,99*o/100),this.velY=getRandomArbitrary(.1,o)}draw(){const{x:e,y:t,avatar:s,avatarWidth:a,avatarHeight:r}=this;ctx.save(),ctx.translate(-a/2,r/2),ctx.drawImage(s,e,t,a,r),ctx.restore()}applyDamage(e){this.hp-=e,this.hp<=0&&(this.explode(),incrementScore(this.points))}explode(){clearInterval(this.interval),this.isDestroyed=!0,this.avatar=boom,setTimeout(()=>{this.remove()},1e3)}spawnNewBullet(){const{x:e,y:t,bullet:s}=this,a=new Bullet({x:e,y:t,owner:this,...s});shoot(a)}move(e){const{x:t,y:s}=e;this.x=t+this.velX,this.y=s+this.velY}remove(){clearInterval(this.interval),enemies=enemies.filter(e=>e!=this)}}const addEnemies=()=>{enemiesInterval=setInterval(()=>{if(!window.document.hidden){let e=width/2+getRandomArbitrary(-150,150),t=0;const s=getEnemyType(),a=new Enemy({...s,x:e,y:t});spawnEnemy(a)}},spawnEnemyInterval)};function nextStage(){clearInterval(enemiesInterval),document.getElementById("nextLvl").style.display="block",spawnEnemyInterval-=200,setTimeout(()=>{document.getElementById("nextLvl").style.display="none",addEnemies()},2e3)}function start(){clearInterval(enemiesInterval),addEnemies()}function StartGame(){document.getElementById("startScreen").style.display="none",player.hp=startingHP,x=width/2,y=.8*height,player.x=width/2,player.y=.8*height,velY=0,velX=0,score=0,enemies.forEach(e=>{e.remove()}),enemies=[],enemies.length=0,bullets=[],bullets.length=0,gameInProgress=!0,document.getElementById("over").style.display="none",start(),window.document.hidden||requestAnimationFrame(update)}document.body.addEventListener("keydown",e=>{keys[e.keyCode]=!0,(arrowsKeyCodes.includes(e.keyCode)||wsadKeyCodes.includes(e.keyCode))&&(player.engineOn=!0)}),document.body.addEventListener("keyup",e=>{keys[e.keyCode]=!1,player.engineOn=!1});class Player{constructor(e,t,s,a,r=BULLETS.DEFAULT_PLAYER){this.x=e,this.y=t,this.hp=s,this.bullet=r,this.canvas=document.getElementById("canvas"),this.img=new Image,this.img.src=a||"../assets/img/ship.png",this.width=20,this.height=20,this.engineOn=!1}draw(){ctx.save(),ctx.translate(-15,0),ctx.drawImage(this.img,x,y,this.width+11,this.height),this.engineOn&&(ctx.beginPath(),ctx.translate(this.x+16,this.y+this.height/2),ctx.lineTo(.2*this.width,.5*this.height),ctx.lineTo(0,.5*this.height+8*Math.random()),ctx.lineTo(-.2*this.width,.5*this.height),ctx.closePath(),ctx.fillStyle="orange",ctx.fill()),ctx.restore()}applyDamage(e){this.hp-=e,this.hp<=0&&(enemies=enemies.filter(e=>e!=this),document.getElementById("over").style.display="block",gameInProgress=!1)}move(e){const{x:t,y:s}=e;this.x=t,this.y=s}shoot(){const{bullet:e}=this;let t=new Bullet({x:player.x,y:player.y,owner:this,...e});shootThrottled(t)}}player=new Player(0,0,startingHP,"assets/img/ship.png");let stars=[],numStars=30,starSpeed=-5;function makeStar(){return{x:Math.random(),y:Math.random(),distance:Math.sqrt(Math.random()),color:"#fff"}}for(i=0;i<numStars;i++)stars[i]=makeStar();function updateStars(){for(i=0;i<numStars;i++)stars[i].y-=Math.pow(stars[i].distance,2)/canvas.width*starSpeed,stars[i].y>1&&(stars[i]=makeStar(),stars[i].y=0),ctx.beginPath(),ctx.save(),ctx.arc(stars[i].x*canvas.width,stars[i].y*canvas.height,2*stars[i].distance,0,2*Math.PI,!1),ctx.lineWidth=4*stars[i].distance,ctx.stroke(),ctx.fillStyle=stars[i].color,ctx.fill(),ctx.restore(),ctx.closePath()}const renderPlayerHP=()=>{ctx.save(),ctx.font="16px kong",ctx.textAlign="right",ctx.fillStyle="white",ctx.fillText(`HP: ${player.hp}`,355,20),ctx.restore()},renderScore=()=>{ctx.save(),ctx.font="16px kong",ctx.textBaseline="middle",ctx.fillStyle="white",ctx.textAlign="left",ctx.fillText(`SCORE: ${score}`,5,15),ctx.restore()};renderUI=(()=>{ctx.save(),ctx.font="16px kong",ctx.textAlign="right",ctx.fillStyle="white",ctx.fillText(`HP: ${player.hp}`,355,20),ctx.restore(),ctx.save(),ctx.font="16px kong",ctx.textBaseline="middle",ctx.fillStyle="white",ctx.textAlign="left",ctx.fillText(`SCORE: ${score}`,5,15),ctx.restore()});const startScreen=document.getElementById("startScreen"),over=document.getElementById("over");function handlePlayerMovement(){applyForces(),player.move({x:x,y:y}),player.draw()}function clearCanvas(){ctx.clearRect(0,0,width,height)}function detectBulletCollisions(){bullets=bullets.filter(e=>e.y<=405&&e.y>=-10),bullets.forEach(e=>{if(e.draw(),e.owner instanceof Player&&enemies.forEach(t=>{const{x:s,y:a,radius:r}=t,n=s-r,i=s+r,l=a-r,o=a+r;e.y>=l&&e.y<=o&&e.x>=n&&e.x<=i&&(t.isDestroyed||(t.applyDamage(gunDamage),bullets=bullets.filter(t=>t!=e)))}),e.owner instanceof Enemy){e.y>=player.y-player.height&&e.y<=player.y+player.height&&e.x>=player.x-player.width&&e.x<=player.x+player.width&&(player.applyDamage(enemyDamage),bullets=bullets.filter(t=>t!=e))}})}function handleCollision_Enemy_Player(e,t){player.y>=t.top-player.height&&player.y<=t.bottom+player.height&&player.x>=t.left-player.width&&player.x<=t.right+player.width&&(e.isDestroyed||(player.applyDamage(enemyDamage),e.applyDamage(e.hp)))}function handleCollision_Enemy_Border(e,t){const s=width,a=height+20,r=t.left<=0||t.right>=s,n=t.top<=-100||t.bottom>=a;r&&(e.velX=-e.velX),n&&e.remove()}function handleDrawingEnemies(){enemies.forEach(e=>{const{x:t,y:s,radius:a}=e,r={left:t-a,right:t+a,top:s-a,bottom:s+a};handleCollision_Enemy_Player(e,r),handleCollision_Enemy_Border(e,r),e.move({x:e.x,y:e.y}),e.draw()})}function updateScore(){score<40?document.getElementById("score").innerHTML="You suck!":score>2e3?document.getElementById("score").innerHTML="You rock! Score:"+score:(s="Score: "+score,document.getElementById("score").innerHTML=s)}function update(){clearCanvas(),handlePlayerMovement(),handleKeysPressed(),updateStars(),detectBulletCollisions(),handleDrawingEnemies(),renderUI(),updateScore(),gameInProgress&&requestAnimationFrame(update)}startScreen.addEventListener("mousedown",e=>{StartGame()},!1),document.addEventListener("keydown",e=>{13==e.keyCode&&("none"===startScreen.style.display&&"none"===over.style.display||(document.getElementById("over").style.display="none",document.getElementById("startScreen").style.display="none",gameInProgress=!0,StartGame()))});const shoot=e=>{window.document.hidden||bullets.push(e)},spawnEnemy=e=>{enemies.push(e)},shootThrottled=throttle(200,shoot),handleKeysPressed=()=>{(keys[38]||keys[87])&&velY>-speed&&velY--,(keys[40]||keys[83])&&velY<speed&&velY++,(keys[39]||keys[68])&&velX<speed&&velX++,(keys[37]||keys[65])&&velX>-speed&&velX--,keys[32]&&player.shoot()},applyForces=()=>{velY*=friction,y+=velY,velX*=friction,(x+=velX)+6>=width-radius?x=width-radius-6:x-6<=radius&&(x=radius+6),y+15>height-radius?y=height-radius-15:y+9<=radius&&(y=radius-9)};function getRandomArbitrary(e,t){return Math.random()*(t-e)+e}function throttle(e,t){let s=0;return(...a)=>{const r=(new Date).getTime();if(!(r-s<e))return s=r,t(...a)}}const getEnemyType=()=>{const e=getRandomArbitrary(0,4);return e>0&&e<=1?ENEMIES.DEFAULT_ENEMY:e>1&&e<=2?ENEMIES.GREEN_ENEMY:e>2&&e<=3?ENEMIES.ORANGE_ENEMY:e>3&&e<=4?ENEMIES.RED_ENEMY:void 0},incrementScore=e=>{(score+=e)>=nextStageScore&&(nextStageScore+=100,nextStage())};